{"version":3,"sources":["components/Nav/RightNav.js","components/Nav/Burger.js","components/Nav/NavBar.js","components/Home.js","components/About.js","components/Contact.js","components/Gallery.js","components/Error404.js","components/App.js","serviceWorker.js","index.js"],"names":["Ul","styled","ul","open","RightNav","className","to","StyledBurger","div","Burger","useState","setOpen","onClick","Nav","nav","NavBar","Home","Fragment","style","marginLeft","About","Contact","Gallery","Error404","App","path","exact","component","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yxBAIA,IAAMA,EAAKC,IAAOC,GAAV,KAUS,qBAAGC,KAAkB,gBAAkB,sBA2BzCC,EAZE,SAAC,GAAc,IAAZD,EAAW,EAAXA,KAElB,OACE,kBAACH,EAAD,CAAIG,KAAMA,GACR,kBAAC,IAAD,CAAME,UAAU,UAAUC,GAAG,KAA7B,QACA,kBAAC,IAAD,CAAMD,UAAU,UAAUC,GAAG,YAA7B,SACA,kBAAC,IAAD,CAAMD,UAAU,UAAUC,GAAG,YAA7B,WACA,kBAAC,IAAD,CAAMD,UAAU,UAAUC,GAAG,YAA7B,a,irBChCN,IAAMC,EAAeN,IAAOO,IAAV,KAmBM,qBAAGL,KAAkB,OAAS,UAMnC,qBAAGA,KAAkB,gBAAkB,eAIvC,qBAAGA,KAAkB,mBAAqB,mBAC5C,qBAAGA,KAAkB,EAAI,KAIvB,qBAAGA,KAAkB,iBAAmB,eAsB5CM,EAfA,WAAO,IAAD,EACKC,oBAAS,GADd,mBACZP,EADY,KACNQ,EADM,KAGnB,OACE,oCACE,kBAACJ,EAAD,CAAcJ,KAAMA,EAAMS,QAAS,kBAAMD,GAASR,KAChD,8BACA,8BACA,+BAEF,kBAAC,EAAD,CAAUA,KAAMA,M,6QCnDtB,IAAMU,EAAMZ,IAAOa,IAAV,KA2BMC,EAZA,WAEb,OACE,kBAACF,EAAD,KACE,yBAAKR,UAAU,QAAf,qBAGA,kBAAC,EAAD,QCZSW,EAZF,WAKX,OACE,kBAAC,IAAMC,SAAP,KACE,wBAAIC,MANW,CACjBC,WAAY,KAKV,uBCKSC,EAZD,WAKZ,OACE,kBAAC,IAAMH,SAAP,KACE,wBAAIC,MANW,CACjBC,WAAY,KAKV,4BCKSE,EAZC,WAKd,OACE,kBAAC,IAAMJ,SAAP,KACE,wBAAIC,MANW,CACjBC,WAAY,KAKV,8BCKSG,EAZC,WAKd,OACE,kBAAC,IAAML,SAAP,KACE,wBAAIC,MANW,CACjBC,WAAY,KAKV,8BCGSI,MATf,WACA,OACE,6BACE,4EACA,wDAA6B,kBAAC,IAAD,CAAMjB,GAAG,KAAT,QAA7B,eCuBWkB,E,uKAjBX,OACE,kBAAC,IAAMP,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOQ,KAAK,IAAIC,OAAK,EAACC,UAAWX,IACjC,kBAAC,IAAD,CAAOS,KAAK,WAAWE,UAAWP,IAClC,kBAAC,IAAD,CAAOK,KAAK,WAAWE,UAAWL,IAClC,kBAAC,IAAD,CAAOG,KAAM,WAAWE,UAAWN,IACnC,kBAAC,IAAD,CAAOM,UAAWJ,U,GAZVK,IAAMC,WCGJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ec2a73ca.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Ul = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-flow: row nowrap;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    flex-flow: column nowrap;\n    background-color: #000000;\n    position: fixed;\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n    top: 0;\n    right: 0;\n    height: 100vh;\n    width: 175px;\n    padding-top: 3.5rem;\n  }\n\n  .navText {\n    color: #FFFFFF;\n    text-decoration: none;\n    padding: 18px 40px;\n  }\n`;\n\nconst RightNav = ({ open }) => {\n\n  return (\n    <Ul open={open}>\n      <Link className='navText' to='/' >Home</Link>\n      <Link className='navText' to='/aboutme'>About</Link>\n      <Link className='navText' to='/gallery'>Gallery</Link>\n      <Link className='navText' to='/contact'>Contact</Link>\n    </Ul>\n  )\n}\n\nexport default RightNav;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport RightNav from './RightNav';\n\nconst StyledBurger = styled.div`\n  width: 2rem;\n  height 2rem;\n  position: fixed;\n  top: 15px;\n  right: 20px;\n  z-index: 20;\n  display: none;\n  cursor: pointer;\n\n  @media (max-width: 768px) {\n    display: flex;\n    justify-content: space-around;\n    flex-flow: column nowrap;\n  }\n\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background-color: ${({ open }) => open ? '#ccc' : '#333'};\n    border-radius: 10px;\n    transform-origin: 1px;\n    transition: all 0.3s linear;\n\n    &:nth-child(1) {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    &:nth-child(2) {\n      transform: ${({ open }) => open ? 'translateX(100%)' : 'translateX(0)'};\n      opacity: ${({ open }) => open ? 0 : 1};\n    }\n\n    &:nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n\n`;\n\n\nconst Burger = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <StyledBurger open={open} onClick={() => setOpen(!open)}>\n        <div />\n        <div />\n        <div />\n      </StyledBurger>\n      <RightNav open={open}/>\n    </>\n  )\n}\n\nexport default Burger;","import React from 'react';\nimport styled from 'styled-components';\nimport Burger from './Burger';\n\nconst Nav = styled.nav`\n  width: 100%;\n  height: 55px;\n  background-color: black;\n  padding: 2px 30px;\n  display: flex;\n  justify-content: space-between;\n\n  .logo {\n    padding: 15px 5px;\n    color: #ffffff\n  }\n`;\n\n\nconst NavBar = () => {\n\n  return (\n    <Nav>\n      <div className=\"logo\">\n        Weidman Woodworks\n      </div>\n      <Burger />\n    </Nav>\n  );\n}\n\nexport default NavBar;","import React from 'react';\n\nconst Home = () => {\n  const titleStyle = {\n    marginLeft: 20,\n  }\n\n  return (\n    <React.Fragment>\n      <h1 style={titleStyle}>Weidman Woodworks</h1>\n    </React.Fragment>\n  );\n}\n\nexport default Home;","import React from 'react';\n\nconst About = () => {\n  const titleStyle = {\n    marginLeft: 20,\n  }\n\n  return (\n    <React.Fragment>\n      <h1 style={titleStyle}>This is the About page</h1>\n    </React.Fragment>\n  );\n}\n\nexport default About;","import React from 'react';\n\nconst Contact = () => {\n  const titleStyle = {\n    marginLeft: 20,\n  }\n\n  return (\n    <React.Fragment>\n      <h1 style={titleStyle}>This is the Contact page</h1>\n    </React.Fragment>\n  );\n}\n\nexport default Contact;","import React from 'react';\n\nconst Gallery = () => {\n  const titleStyle = {\n    marginLeft: 20,\n  }\n\n  return (\n    <React.Fragment>\n      <h1 style={titleStyle}>This is the Gallery page</h1>\n    </React.Fragment>\n  );\n}\n\nexport default Gallery;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Error404() {\nreturn (\n  <div>\n    <h2>The page you are looking for does not exist!</h2>\n    <h3>Would you like to return <Link to=\"/\">home</Link> instead?</h3>\n  </div>\n);\n}\n\nexport default Error404;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport NavBar from './Nav/NavBar';\nimport Home from './Home';\nimport About from './About';\nimport Contact from './Contact';\nimport Gallery from './Gallery';\nimport Error404 from './Error404';\n\nclass App extends React.Component {\n\n  render() {\n\n    return(\n      <React.Fragment>\n        <NavBar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/aboutme' component={About} />\n          <Route path='/gallery' component={Gallery} />\n          <Route path= '/contact' component={Contact} />\n          <Route component={Error404} />\n        </Switch>\n      </React.Fragment>\n    );\n\n  }\n\n}\n\nexport default App;\n   ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}